{% if ui_frontend_url != '' %}
{% set baseurl = ui_frontend_url %} 
{% elif eaas_hostname == 'localhost' %}
{% set baseurl = 'http://eaas:8080' %}
{% else %}
{% set baseurl = eaas_protocol + eaas_hostname + ':' + eaas_public_port %}
{% endif %}

objectarchive:
  httpexport: "{{ baseurl }}/objectarchive/"
  default_archive: "{{ eaas_default_archive }}"
  user_archive_prefix: "{{ eaas_user_archive_prefix }}"

{% if eaas_enable_user_auth %}
authentication:
  authJwksUri: "https://{{ eaas_hostname }}/auth/realms/master/protocol/openid-connect/certs"
  authAudience: "{{ eaas_auth_audience }}"
  authEnabled: true
  keycloakAdminUser: {{ keycloak_admin_user }}
  adminRoleLabel: {{ keycloak_admin_role_label }}
  userRoleLabel: {{ keycloak_user_role_label }}
{% endif %}

emil:
  classificationservice: "{{ baseurl }}/"
  imageproposerservice: "{{ baseurl }}/"
{% if eaas_enable_user_auth %}
  singleUserMode: "{{ eaas_auth_single_user }}"
{% endif %}

{% if minio_enabled %}
storage:
  s3_user_access_key_id: "{{ minio_user_key }}"
  s3_user_access_key_secret: "{{ minio_user_secret }}"
{% endif %}

ws:
{% if not eaas_standalone %}
  blobstore: "{{ baseurl }}"
  imagebuilder: "{{ baseurl }}"
  imagearchive: "{{ baseurl }}"
  eaasgw:  "{{ baseurl }}"
  embedgw: "{{ baseurl }}"
  objectarchive: "{{ baseurl }}"
  softwarearchive: "{{ baseurl }}"
{% endif %}
{% if eaas_enable_backend_auth is defined and eaas_enable_backend_auth %}
  apiSecret: "{{ eaas_api_secret }}"
{% endif %}

rest:
  blobstore: "{{ baseurl }}/blobstore/api/v1/blobs"

emucomp:
  blobstore_soap: "{{ baseurl }}"
  blobstore_rest: "{{ baseurl }}/blobstore/api/v1/blobs"
{% if eaas_http_proxy != '' %}
  image_proxy: {{ eaas_http_proxy }}
{% endif %}
{% if eaas_enable_webrtc %}
  enable_pulseaudio: true
{% endif %}

imagebuilder:
  blobstore: "{{ baseurl }}/"

components:
  client_timeout: 30s
  timeout: 60s
  emulator_containers:
    enabled: {{ eaas_enable_emulator_containers | default(true) | lower }}
    snapshot: {{ eaas_enable_snapshots | default(false) | lower }}
    uid: 1000
    gid: 1000
  containers:
    blobstore: "{{ baseurl }}"

  session_statistics:
    flush_delay: 30s

  tcpNode:
    ports: 10000-10009

{% if eaas_enable_new_image_archive %}
imagearchive:
  # legacy implementation
  backends:
  - name: public
    type: filesystem
    basepath: /home/bwfla/image-archive/public
    http_prefix: "{{ baseurl }}/imagearchive/public"
    nameindex_config_path: /home/bwfla/.bwFLA/nameindices/public/
    export_handles: {{ eaas_enable_handlenet | lower }}
  - name: remote
    type: filesystem
    basepath: /home/bwfla/image-archive/remote
    http_prefix: http://hdl.handle.net/11270
    nameindex_config_path: /home/bwfla/.bwFLA/nameindices/remote/
    export_handles: false
    order: 1
  - name: emulators
    type: filesystem
    basepath: /home/bwfla/image-archive/emulators
    http_prefix: "http://nginx:81/"
    nameindex_config_path: /home/bwfla/.bwFLA/nameindices/emulators/
    export_handles: false
  - name: default
    type: filesystem
    basepath: /home/bwfla/image-archive/
    http_prefix: "http://nginx:81/"
    nameindex_config_path: /home/bwfla/.bwFLA/nameindices/default/
    order: 2

  # image-archive v2
  storage:
    endpoints:
    - name: "minio"
      address: "http://minio:9000"
      credentials:
        access_key: "{{ minio_user_key }}"
        secret_key: "{{ minio_user_secret }}"

    locations:
    - name: "default"
      endpoint: "minio"
      bucket: "image-archive"
      paths:
        container: "/containers"
        machine: "/machines"
        emulator: "/emulators"
        template: "/templates"
        checkpoint: "/images"
        image: "/images"
        rom: "/images"

    - name: "public"
      endpoint: "minio"
      bucket: "image-archive"
      paths:
        container: "/public/containers"
        machine: "/public/machines"
        emulator: "/public/emulators"
        template: "/public/templates"
        checkpoint: "/public/images"
        image: "/public/images"
        rom: "/public/images"

    - name: "remote"
      endpoint: "minio"
      bucket: "image-archive"
      paths:
        container: "/remote/containers"
        machine: "/remote/machines"
        emulator: "/remote/emulators"
        template: "/remote/templates"
        checkpoint: "/remote/images"
        image: "/remote/images"
        rom: "/remote/images"

    default_location: "default"

{% endif %}

{% if eaas_enable_oaipmh_provider %}
metadata_provider:
  base_url: "{{ baseurl }}/oaipmh/providers"
  backends:
  - name: "environments"
    identity:
      repository_name: 'EaaSI data repository'
      earliest_date: '2018-11-01T00:00:00Z'
      admin_email: 'admin@example.invalid'

    source:
      base_url: "{{ baseurl }}/emil/metadata-repositories/public-environments"

    response_limits:
      max_num_identifiers: 50
      max_num_records: 50
      max_num_sets: 100

  - name: "images"
    identity:
      repository_name: 'EaaSI data repository'
      earliest_date: '2018-11-01T00:00:00Z'
      admin_email: 'admin@example.invalid'

    source:
      base_url: "{{ baseurl }}/emil/metadata-repositories/public-images"

    response_limits:
      max_num_identifiers: 50
      max_num_records: 50
      max_num_sets: 100
{% endif %}

{% if eaas_enable_oaipmh_harvester %}
metadata_harvester:
    base_url: "{{ baseurl }}/oaipmh/harvesters"
{% endif %}

clustermanager.providers.defaults.all.protocol: ""
