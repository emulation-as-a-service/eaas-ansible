version: "{{ docker_compose_file_version }}"

{% if docker_network_name != '' %}
networks:
  {{ docker_network_name }}:
    name: {{ docker_network_name }}
{% if docker_custom_network != '' %}
    external: true
{% endif %}

{% endif %}
services:
{% if ui_enable_admin_ui or ui_landing_page %}
  nginx:
{% if eaas_workaround_docker_hub_ratelimits %}
    image: mirror.gcr.io/library/nginx:stable
{% else %}
    image: nginx:stable
{% endif %}
    container_name: nginx
    volumes:
      - ./eaas-ui:/www
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./welcome-content:/welcome-content
{% if eaas_deployment_mode == 'gateway' %}
      - ./deployments:/welcome-content/deployments/{{ eaas_deployment_api_access_token }}
{% endif %}
{% if ui_enable_admin_ui %}
      - ./config/admin-ui.json:/www/eaas-frontend-admin/dist/config.json:ro
{% endif %}
{% if ui_landing_page %}
      - ./config/admin-ui.json:/www/landing-page/dist/config.json:ro
{% endif %}
{% if docker_network_name != '' %}
    networks:
    - {{ docker_network_name }}
{% endif %}
{% endif %}

  resolver:
{% if eaas_workaround_docker_hub_ratelimits %}
    image: mirror.gcr.io/library/nginx:stable
{% else %}
    image: nginx:stable
{% endif %}
    container_name: resolver
{% if docker_network_name != '' %}
    networks:
    - {{ docker_network_name }}
{% endif %}
    expose:
    - 8080
    volumes:
    - ./config/nginx/resolver.conf:/etc/nginx/nginx.conf
    - ./resolver/cache:/var/cache/nginx

{% if operator_enabled %}
  operator:
    image: {{ operator_image }}
    container_name: operator
{% if docker_network_name != '' %}
    networks:
    - {{ docker_network_name }}
{% endif %}
    ports:
    - 127.0.0.1:8000:8000
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - ./operator/config.yaml:/work/config.yaml:ro
    - ./operator/state:/work/state
    - ./:/work/target
{% endif %}

{% if keycloak_enabled %}
  keycloak:
    image: quay.io/keycloak/keycloak:{{ keycloak_version }}
    container_name: keycloak
{% if docker_network_name != '' %}
    networks:
    - {{ docker_network_name }}
{% endif %}
    environment:
      DB_VENDOR: h2
      KEYCLOAK_ADMIN: "{{ keycloak_admin_user}}"
      KEYCLOAK_ADMIN_PASSWORD: "{{ keycloak_admin_password }}"
      KC_HOSTNAME_ADMIN_URL: "{{ keycloak_frontend_url }}/"
      KC_HOSTNAME_URL: "{{ keycloak_frontend_url }}/"
      KC_HTTP_RELATIVE_PATH: "/auth"
      KC_PROXY: "edge"

    command:
{% if docker_ssl_enabled %}
    - start
{% else %}
    - start-dev
{% endif %}
    - --spi-login-protocol-openid-connect-legacy-logout-redirect-uri=true
    - -Dkeycloak.migration.action=import
    - -Dkeycloak.migration.provider=singleFile
    - -Dkeycloak.migration.strategy=IGNORE_EXISTING
    - -Dkeycloak.migration.file=/run/keycloak/defaults.json

    volumes:
      - {{ keycloak_data_dir }}:/opt/keycloak/data/h2
{% if keycloak_theme_enabled %}
      - {{ keycloak_theme_file }}:/opt/keycloak/providers/eaasi-theme.jar:ro
{% endif %}
      - {{ keycloak_defaults_file }}:/run/keycloak/defaults.json:ro
{% endif %}

{% if coturn_enabled %}
  coturn:
    image: registry.gitlab.com/emulation-as-a-service/coturn-image
    container_name: coturn
{% if docker_network_name != '' %}
    networks:
    - {{ docker_network_name }}
{% endif %}
    ports:
    - 3478:3478
    - 3478:3478/udp
    command: turnserver --listening-port 3478 --secure-stun --verbose -u eaas:eaas -r {{ eaas_hostname }}
{% endif %}

  eaas:
    image: {{ docker_image }}
    container_name: {{ host_eaas_service_name }}
    privileged: true
    depends_on:
    - resolver
{% if keycloak_enabled %}
    - keycloak
{% endif %}
{% if minio_enabled %}
    - minio
{% for storage in eaas_imagearchive_storage if storage.provider != 'minio' %}
    - minio-gw-{{ loop.index }}
{% endfor %}
{% endif %}
{% if docker_network_name != '' %}
    networks:
    - {{ docker_network_name }}
{% endif %}
    environment:
      EAAS_DEPLOYMENT_API_TOKEN: "{{ eaas_deployment_api_access_token }}"
      EAAS_SERVER_OPTS: "{{ eaas_server_options | join(' ') }}"
      SSL_PROXY: "{{ docker_ssl_enabled | default("no") | lower }}"
{% if not docker_ssl_enabled %}
      EAAS_PROXYPORT: {{ eaas_public_port }}
      EAAS_PROXYHOST: {{ eaas_hostname }}
{% endif %}
{% if minio_enabled %}
      MINIO_ADMIN_KEY: {{ minio_key }}
      MINIO_ADMIN_SECRET: {{ minio_secret }}
      MINIO_USER_KEY: {{ minio_user_key }}
      MINIO_USER_SECRET: {{ minio_user_secret }}
      MINIO_ARCHIVE_POLICY_FILE: "/eaas/config/minio/policies/image-archive.json"
{% endif %}
{% if eaasi_ui is undefined %}
    ports:
    - {{ docker_port_mapping }}
{% if docker_network_ports != '' %}
    - {{ docker_network_ports }}
{% endif %}
{% endif %}
{% if eaasi_ui is defined %}
    expose:
    - {{ docker_internal_port }}
    external_links:
    - eaasi-nginx:{{ eaas_hostname }}
{% endif %}
    volumes:
    - ./log/server:/home/bwfla/bw-fla-server/standalone/log
    - ./server-data:/eaas/server-data
    - {{ docker_objects_volume | default("./objects", true) }}:/eaas/objects
    - {{ docker_export_volume | default("./export", true) }}:/eaas/export
    - {{ docker_image_archive_volume | default("./image-archive", true) }}:/eaas/image-archive
    - {{ docker_import_volume | default("./import", true) }}:/eaas/import
    - {{ host_tmp_storage }}:/tmp-storage
{% if not docker_disable_tmp_volume %}
    - tmpfs_vol:/tmp
{% endif %}
    - ./config:/eaas/config
    - {{ host_eaas_config_nghttpx_dir }}/nghttpx.conf:/etc/nghttpx/nghttpx.conf
    - ./certificates:/eaas/certificates
    - ./deployments:/eaas/deployments
{% if eaasi_ui is undefined %}
{% endif %}
{% for volume in docker_custom_volumes %}
    - {{ volume }}
{% endfor %}
{% if docker_ssl_enabled and eaasi_ui is undefined %}
    extra_hosts:
    - {{ eaas_hostname }}:127.0.0.1
{% endif %}

{% if minio_enabled %}
{% include 'minio-services.yaml.j2' %}
{% endif %}

{% if not docker_disable_tmp_volume %}
volumes:
  tmpfs_vol:
    driver_opts:
      type: tmpfs
      device: tmpfs
{% endif %}