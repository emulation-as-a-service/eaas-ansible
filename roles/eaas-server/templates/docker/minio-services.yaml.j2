version: "{{ docker_compose_file_version }}"

services:
  minio:
    image: minio/minio
    container_name: minio
{% if docker_network_name != '' %}
    networks:
    - {{ docker_network_name }}
{% endif %}
    ports:
    - 9000:9000
    volumes:
    - {{ minio_data_path }}/data:/data
    environment:
      MINIO_ACCESS_KEY: {{ minio_key }}
      MINIO_SECRET_KEY: {{ minio_secret }}
    command: server /data
{% for storage in eaas_imagearchive_storage %}
{% set name = 'minio-gw-' + loop.index | string %}

  {{ name }}:
    image: minio/minio
    container_name: {{ name }}
{% if docker_network_name != '' %}
    networks:
    - {{ docker_network_name }}
{% endif %}
    ports:
    - 9000:9000
    volumes:
    - {{ minio_data_path }}/cache-{{ loop.index }}:/data
{% if storage.provider == 'google-cloud-storage' %}
    - {{ minio_secrets_dir }}/{{ name }}.json:/credentials.json
{% endif %}
    environment:
      MINIO_ACCESS_KEY: {{ storage.credentials.access_key | default(minio_key) }}
      MINIO_SECRET_KEY: {{ storage.credentials.secret_key | default(minio_secret) }}
{% if storage.provider == 'google-cloud-storage' %}
      GOOGLE_APPLICATION_CREDENTIALS: /credentials.json
{% endif %}
      MINIO_CACHE: "on"
      MINIO_CACHE_DRIVES: /data
      MINIO_CACHE_QUOTA: 80
      MINIO_CACHE_AFTER: 1
      MINIO_CACHE_WATERMARK_LOW: 70
      MINIO_CACHE_WATERMARK_HIGH: 90
{% if storage.provider == 'google-cloud-storage' %}
    command: gateway gcs {{ lookup('file', storage.credentials.file) | from_json | json_query('project_id') }}
{% else %}
	{{ unsupported_storage_provider | mandatory('Unsupported storage provider: ' + storage.provider) }}
{% endif %}
{% endfor %}
